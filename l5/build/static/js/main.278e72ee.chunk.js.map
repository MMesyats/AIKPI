{"version":3,"sources":["App.js","index.js"],"names":["App","useState","withCycles","changeWithCyvles","cycles","setCycles","shift","setShift","freq","setFreq","ampl","setAmpl","nu","setNu","b1","setB1","b2","setB2","noise","setNoise","smoothingMode","setSmoothingMode","alpha","setAlpha","width","setWidth","zone","a","countl3","useCallback","t0","zones","isAmplMinus","push","tArray","t","datasets","label","fill","data","map","forEach","bottom","Math","exp","pow","borderColor","labels","countl4","aArray","m","random","k","array","newArr","val","i","exponentialSmoothing","length","console","log","movingAverage","className","type","value","onClick","prev","Fragment","step","onChange","min","max","Group","target","Button","options","elements","point","radius","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.278e72ee.chunk.js","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { InputNumber, Radio } from 'antd';\nimport { Line } from 'react-chartjs-2';\nimport './App.scss';\n\nconst exponentialSmoothing = (array, alpha = 0.9) => {\n\tconst newArr = [];\n\tarray.forEach(\n\t\t(val, i) => (i !== 0 ? newArr.push(newArr[i - 1] + alpha * (val - newArr[i - 1])) : newArr.push(array[i]))\n\t);\n\treturn newArr;\n};\n\nconst movingAverage = (array = [], width = 20) => {\n\tconst newArr = [ ...array ];\n\tfor (let i = 1 + width; i < array.length - width; i++)\n\t\tnewArr.push(newArr[i] + (array[i + width] - array[i - 1 - width]) / (1 + 2 * width));\n\tconsole.log(newArr);\n\treturn newArr;\n};\n\nfunction App() {\n\tconst [ withCycles, changeWithCyvles ] = useState(false);\n\tconst [ cycles, setCycles ] = useState(5);\n\tconst [ shift, setShift ] = useState(0.2);\n\tconst [ freq, setFreq ] = useState(80);\n\tconst [ ampl, setAmpl ] = useState(0.8);\n\tconst [ nu, setNu ] = useState(300);\n\tconst [ b1, setB1 ] = useState(23);\n\tconst [ b2, setB2 ] = useState(23);\n\tconst [ noise, setNoise ] = useState(0);\n\tconst [ smoothingMode, setSmoothingMode ] = useState(0);\n\tconst [ alpha, setAlpha ] = useState(0.5);\n\tconst [ width, setWidth ] = useState(20);\n\n\tconst zone = (a, b1, b2, nu) => ({\n\t\ta,\n\t\tb1,\n\t\tb2,\n\t\tnu\n\t});\n\n\tconst countl3 = useCallback(\n\t\t() => {\n\t\t\tlet a = ampl;\n\t\t\tconst t0 = 60 * 1100 / freq;\n\t\t\tconst zones = [];\n\t\t\tconst isAmplMinus = a < 0;\n\t\t\tif (isAmplMinus) a = -a;\n\t\t\tzones.push(zone(1.7 * a, 20, 20, t0 / 3.2));\n\t\t\tzones.push(zone(-1.2 * a, 24, 24, t0 / 3));\n\t\t\tzones.push(zone(3.9 * a, 6, 6, t0 / 2.7));\n\t\t\tzones.push(zone(-0.6 * a, 10, 10, t0 / 2.6));\n\t\t\tzones.push(zone(isAmplMinus ? -ampl : ampl, b1, b2, nu));\n\t\t\tconst tArray = [];\n\t\t\tfor (let t = 0; t <= t0; t++) tArray.push(t);\n\t\t\tconst aArray = tArray.map((t) => {\n\t\t\t\tlet a = 0;\n\t\t\t\tzones.forEach(({ a: ampl, b1, b2, nu }) => {\n\t\t\t\t\tconst bottom = t < nu ? b1 : b2;\n\t\t\t\t\ta += ampl * Math.exp(-Math.pow(t - nu, 2) / Math.pow(bottom, 2));\n\t\t\t\t});\n\t\t\t\treturn a;\n\t\t\t});\n\t\t\treturn {\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'L3',\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\tdata: aArray,\n\t\t\t\t\t\tborderColor: 'rgba(0, 99, 255, 1)'\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tlabels: tArray\n\t\t\t};\n\t\t},\n\t\t[ freq, ampl, nu, b1, b2 ]\n\t);\n\tconst countl4 = useCallback(\n\t\t() => {\n\t\t\tlet a = ampl;\n\t\t\tconst t0 = 60 * 1100 / freq;\n\t\t\tconst zones = [];\n\t\t\tconst isAmplMinus = a < 0;\n\t\t\tif (isAmplMinus) a = -a;\n\t\t\tzones.push(zone(1.7 * a, 20, 20, t0 / 3.2));\n\t\t\tzones.push(zone(-1.2 * a, 24, 24, t0 / 3));\n\t\t\tzones.push(zone(3.9 * a, 6, 6, t0 / 2.7));\n\t\t\tzones.push(zone(-0.6 * a, 10, 10, t0 / 2.6));\n\t\t\tzones.push(zone(ampl, b1, b2, nu));\n\t\t\tconst tArray = [];\n\t\t\tlet aArray = [];\n\t\t\tfor (let m = 0; m < cycles; m++) {\n\t\t\t\tif (Math.random() >= 0.5) {\n\t\t\t\t\tzones[4].a = zones[4].a * (1 + shift / zones[4].a);\n\t\t\t\t}\n\n\t\t\t\tzones[4].nu += zones[4].nu + zones[4].nu / 10;\n\n\t\t\t\tfor (let t = m * t0; t < (m + 1) * t0; t += 2) {\n\t\t\t\t\tlet a = 0;\n\n\t\t\t\t\tconst k = t % t0;\n\n\t\t\t\t\tzones.forEach((zone) => {\n\t\t\t\t\t\tconst bottom = k < zone.nu ? zone.b1 : zone.b2;\n\t\t\t\t\t\ta +=\n\t\t\t\t\t\t\tzone.a * Math.exp(-Math.pow(k - zone.nu, 2) / (2 * Math.pow(bottom, 2))) +\n\t\t\t\t\t\t\t(Math.random() - 0.5) * noise;\n\t\t\t\t\t});\n\t\t\t\t\taArray.push(a);\n\t\t\t\t\ttArray.push(t);\n\t\t\t\t}\n\t\t\t\tzones[4].a = ampl;\n\t\t\t\tzones[4].nu = nu;\n\t\t\t}\n\t\t\tif (smoothingMode === 1) aArray = exponentialSmoothing(aArray, alpha);\n\t\t\tif (smoothingMode === 2) aArray = movingAverage(aArray, width);\n\n\t\t\treturn {\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'L3',\n\t\t\t\t\t\tdata: aArray\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tlabels: tArray\n\t\t\t};\n\t\t},\n\t\t[ ampl, freq, b1, b2, nu, smoothingMode, alpha, width, cycles, shift, noise ]\n\t);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div>\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"checkbox\" value={withCycles} onClick={() => changeWithCyvles((prev) => !prev)} />\n\t\t\t\t\tс циклами\n\t\t\t\t\t<br />\n\t\t\t\t</label>\n\t\t\t\t{withCycles && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<label>Alt</label>\n\t\t\t\t\t\t<InputNumber value={shift} step={0.1} onChange={setShift} />\n\t\t\t\t\t\t<label>Cycles count</label>\n\t\t\t\t\t\t<InputNumber value={cycles} min=\"1\" onChange={setCycles} />\n\t\t\t\t\t\t<label>Noise</label>\n\t\t\t\t\t\t<InputNumber value={noise} min=\"0\" step={0.01} onChange={setNoise} />\n\t\t\t\t\t\t{smoothingMode === 1 && (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<label>Alpha</label>\n\t\t\t\t\t\t\t\t<InputNumber value={alpha} min=\"0\" max=\"1\" step={0.01} onChange={setAlpha} />\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{smoothingMode === 2 && (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<label>Width</label>\n\t\t\t\t\t\t\t\t<InputNumber value={width} onChange={setWidth} />\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Radio.Group\n\t\t\t\t\t\t\tclassName=\"radio\"\n\t\t\t\t\t\t\tvalue={smoothingMode}\n\t\t\t\t\t\t\tonChange={({ target: { value } }) => setSmoothingMode(value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Radio.Button value={0}>Without Smoothing</Radio.Button>\n\t\t\t\t\t\t\t<Radio.Button value={1}>Exponential</Radio.Button>\n\t\t\t\t\t\t\t<Radio.Button value={2}>Moving Average</Radio.Button>\n\t\t\t\t\t\t</Radio.Group>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\n\t\t\t\t<label>Fh</label>\n\t\t\t\t<InputNumber value={freq} onChange={(val) => setFreq(val)} />\n\t\t\t\t<label>A(t)</label>\n\t\t\t\t<InputNumber value={ampl} onChange={(val) => setAmpl(val)} />\n\t\t\t\t<label>nu(t)</label>\n\t\t\t\t<InputNumber value={nu} onChange={(val) => setNu(val)} />\n\t\t\t\t<label>b1(t)</label>\n\t\t\t\t<InputNumber value={b1} onChange={(val) => setB1(val)} />\n\t\t\t\t<label>b2(t)</label>\n\t\t\t\t<InputNumber value={b2} onChange={(val) => setB2(val)} />\n\t\t\t</div>\n\t\t\t<Line data={withCycles ? countl4 : countl3} options={{ elements: { point: { radius: 0 } } }} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}